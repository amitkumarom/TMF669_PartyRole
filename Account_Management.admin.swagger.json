{
    "swagger": "2.0", 
    "info": {
        "title": "Account Management", 
        "description": "This is Swagger UI environment generated for the TMF Account Management specification", 
        "version": "2.0"
    }, 
    "host": "biologeek.orange-labs.fr", 
    "basePath": "/tmf-api/accountManagement/v2/", 
    "schemes": [
        "https"
    ], 
    "consumes": [
        "application/json"
    ], 
    "produces": [
        "application/json"
    ], 
    "paths": {
        "/partyAccount": {
            "get": {
                "operationId": "listPartyAccount", 
                "summary": "List or find 'PartyAccount' objects", 
                "tags": [
                    "partyAccount"
                ], 
                "parameters": [
                    {
                        "type": "string", 
                        "required": false, 
                        "in": "query", 
                        "name": "fields", 
                        "description": "Comma separated properties to display in response"
                    }, 
                    {
                        "type": "integer", 
                        "required": false, 
                        "in": "query", 
                        "name": "offset", 
                        "description": "Requested index for start of resources to be provided in response"
                    }, 
                    {
                        "type": "integer", 
                        "required": false, 
                        "in": "query", 
                        "name": "limit", 
                        "description": "Requested number of resources to be provided in response"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "creditLimit.unit", 
                        "description": "For filtering on the base of 'unit' field (equality)"
                    }, 
                    {
                        "format": "float", 
                        "in": "query", 
                        "type": "number", 
                        "name": "creditLimit.value", 
                        "description": "For filtering on the base of 'value' field (equality)"
                    }, 
                    {
                        "name": "creditLimit.value.gt", 
                        "description": "For filtering on the base of 'value' field (great than)", 
                        "type": "number", 
                        "format": "float", 
                        "in": "query"
                    }, 
                    {
                        "name": "creditLimit.value.lt", 
                        "description": "For filtering on the base of 'value' field (less than)", 
                        "type": "number", 
                        "format": "float", 
                        "in": "query"
                    }, 
                    {
                        "format": "date-time", 
                        "in": "query", 
                        "type": "string", 
                        "name": "lastModified", 
                        "description": "For filtering on the base of 'lastModified' field (equality)"
                    }, 
                    {
                        "name": "lastModified.gt", 
                        "description": "For filtering on the base of 'lastModified' field (great than)", 
                        "type": "string", 
                        "format": "date-time", 
                        "in": "query"
                    }, 
                    {
                        "name": "lastModified.lt", 
                        "description": "For filtering on the base of 'lastModified' field (less than)", 
                        "type": "string", 
                        "format": "date-time", 
                        "in": "query"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "name", 
                        "description": "For filtering on the base of 'name' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "state", 
                        "description": "For filtering on the base of 'state' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "type", 
                        "description": "For filtering on the base of 'type' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "paymentStatus", 
                        "description": "For filtering on the base of 'paymentStatus' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "integer", 
                        "name": "paymentPlan.numberOfPayments", 
                        "description": "For filtering on the base of 'numberOfPayments' field (equality)"
                    }, 
                    {
                        "name": "paymentPlan.numberOfPayments.gt", 
                        "description": "For filtering on the base of 'numberOfPayments' field (great than)", 
                        "type": "integer", 
                        "in": "query"
                    }, 
                    {
                        "name": "paymentPlan.numberOfPayments.lt", 
                        "description": "For filtering on the base of 'numberOfPayments' field (less than)", 
                        "type": "integer", 
                        "in": "query"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "paymentPlan.paymentFrequency", 
                        "description": "For filtering on the base of 'paymentFrequency' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "integer", 
                        "name": "paymentPlan.priority", 
                        "description": "For filtering on the base of 'priority' field (equality)"
                    }, 
                    {
                        "name": "paymentPlan.priority.gt", 
                        "description": "For filtering on the base of 'priority' field (great than)", 
                        "type": "integer", 
                        "in": "query"
                    }, 
                    {
                        "name": "paymentPlan.priority.lt", 
                        "description": "For filtering on the base of 'priority' field (less than)", 
                        "type": "integer", 
                        "in": "query"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "paymentPlan.status", 
                        "description": "For filtering on the base of 'status' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "paymentPlan.type", 
                        "description": "For filtering on the base of 'type' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "financialAccount.name", 
                        "description": "For filtering on the base of 'name' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "defaultPaymentMethod.name", 
                        "description": "For filtering on the base of 'name' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "relatedParty.@referredType", 
                        "description": "For filtering on the base of '@referredType' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "relatedParty.name", 
                        "description": "For filtering on the base of 'name' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "relatedParty.role", 
                        "description": "For filtering on the base of 'role' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "taxExemption.certificateNumber", 
                        "description": "For filtering on the base of 'certificateNumber' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "taxExemption.issuingJurisdiction", 
                        "description": "For filtering on the base of 'issuingJurisdiction' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "taxExemption.reason", 
                        "description": "For filtering on the base of 'reason' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "contact.contactName", 
                        "description": "For filtering on the base of 'contactName' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "contact.contactType", 
                        "description": "For filtering on the base of 'contactType' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "contact.partyRoleType", 
                        "description": "For filtering on the base of 'partyRoleType' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "accountBalance.type", 
                        "description": "For filtering on the base of 'type' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "accountRelationship.relationshipType", 
                        "description": "For filtering on the base of 'relationshipType' field (equality)"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Ok", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/PartyAccount"
                            }, 
                            "type": "array"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }, 
            "post": {
                "operationId": "createPartyAccount", 
                "summary": "Creates a 'PartyAccount'", 
                "tags": [
                    "partyAccount"
                ], 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/PartyAccount_Create"
                        }, 
                        "required": true, 
                        "in": "body", 
                        "name": "partyAccount", 
                        "description": "The Party Account to be created"
                    }
                ], 
                "responses": {
                    "201": {
                        "description": "Created", 
                        "schema": {
                            "$ref": "#/definitions/PartyAccount"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }, 
        "/partyAccount/{id}": {
            "get": {
                "operationId": "retrievePartyAccount", 
                "summary": "Retrieves a 'PartyAccount' by Id", 
                "tags": [
                    "partyAccount"
                ], 
                "parameters": [
                    {
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path", 
                        "description": "Identifier of the Party Account"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Ok", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/PartyAccount"
                            }, 
                            "type": "array"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "404": {
                        "description": "Not Found", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }, 
            "patch": {
                "operationId": "patchPartyAccount", 
                "summary": "Updates partially a 'PartyAccount' by Id", 
                "tags": [
                    "partyAccount"
                ], 
                "parameters": [
                    {
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path", 
                        "description": "Identifier of the Party Account"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/PartyAccount_Update"
                        }, 
                        "required": true, 
                        "in": "body", 
                        "name": "partyAccount", 
                        "description": "The Party Account to be updated"
                    }
                ], 
                "responses": {
                    "201": {
                        "description": "Updated", 
                        "schema": {
                            "$ref": "#/definitions/PartyAccount"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "404": {
                        "description": "Not Found", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }, 
            "delete": {
                "operationId": "deletePartyAccount", 
                "summary": "Deletes a 'PartyAccount' by Id", 
                "tags": [
                    "partyAccount"
                ], 
                "parameters": [
                    {
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path", 
                        "description": "Identifier of the Party Account"
                    }
                ], 
                "responses": {
                    "204": {
                        "description": "Deleted"
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "404": {
                        "description": "Not Found", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }, 
        "/billingAccount": {
            "get": {
                "operationId": "listBillingAccount", 
                "summary": "List or find 'BillingAccount' objects", 
                "tags": [
                    "billingAccount"
                ], 
                "parameters": [
                    {
                        "type": "string", 
                        "required": false, 
                        "in": "query", 
                        "name": "fields", 
                        "description": "Comma separated properties to display in response"
                    }, 
                    {
                        "type": "integer", 
                        "required": false, 
                        "in": "query", 
                        "name": "offset", 
                        "description": "Requested index for start of resources to be provided in response"
                    }, 
                    {
                        "type": "integer", 
                        "required": false, 
                        "in": "query", 
                        "name": "limit", 
                        "description": "Requested number of resources to be provided in response"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "paymentStatus", 
                        "description": "For filtering on the base of 'paymentStatus' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "creditLimit.unit", 
                        "description": "For filtering on the base of 'unit' field (equality)"
                    }, 
                    {
                        "format": "float", 
                        "in": "query", 
                        "type": "number", 
                        "name": "creditLimit.value", 
                        "description": "For filtering on the base of 'value' field (equality)"
                    }, 
                    {
                        "name": "creditLimit.value.gt", 
                        "description": "For filtering on the base of 'value' field (great than)", 
                        "type": "number", 
                        "format": "float", 
                        "in": "query"
                    }, 
                    {
                        "name": "creditLimit.value.lt", 
                        "description": "For filtering on the base of 'value' field (less than)", 
                        "type": "number", 
                        "format": "float", 
                        "in": "query"
                    }, 
                    {
                        "format": "date-time", 
                        "in": "query", 
                        "type": "string", 
                        "name": "lastModified", 
                        "description": "For filtering on the base of 'lastModified' field (equality)"
                    }, 
                    {
                        "name": "lastModified.gt", 
                        "description": "For filtering on the base of 'lastModified' field (great than)", 
                        "type": "string", 
                        "format": "date-time", 
                        "in": "query"
                    }, 
                    {
                        "name": "lastModified.lt", 
                        "description": "For filtering on the base of 'lastModified' field (less than)", 
                        "type": "string", 
                        "format": "date-time", 
                        "in": "query"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "name", 
                        "description": "For filtering on the base of 'name' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "state", 
                        "description": "For filtering on the base of 'state' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "type", 
                        "description": "For filtering on the base of 'type' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "integer", 
                        "name": "paymentPlan.numberOfPayments", 
                        "description": "For filtering on the base of 'numberOfPayments' field (equality)"
                    }, 
                    {
                        "name": "paymentPlan.numberOfPayments.gt", 
                        "description": "For filtering on the base of 'numberOfPayments' field (great than)", 
                        "type": "integer", 
                        "in": "query"
                    }, 
                    {
                        "name": "paymentPlan.numberOfPayments.lt", 
                        "description": "For filtering on the base of 'numberOfPayments' field (less than)", 
                        "type": "integer", 
                        "in": "query"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "paymentPlan.paymentFrequency", 
                        "description": "For filtering on the base of 'paymentFrequency' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "integer", 
                        "name": "paymentPlan.priority", 
                        "description": "For filtering on the base of 'priority' field (equality)"
                    }, 
                    {
                        "name": "paymentPlan.priority.gt", 
                        "description": "For filtering on the base of 'priority' field (great than)", 
                        "type": "integer", 
                        "in": "query"
                    }, 
                    {
                        "name": "paymentPlan.priority.lt", 
                        "description": "For filtering on the base of 'priority' field (less than)", 
                        "type": "integer", 
                        "in": "query"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "paymentPlan.status", 
                        "description": "For filtering on the base of 'status' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "paymentPlan.type", 
                        "description": "For filtering on the base of 'type' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "financialAccount.name", 
                        "description": "For filtering on the base of 'name' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "defaultPaymentMethod.name", 
                        "description": "For filtering on the base of 'name' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "relatedParty.@referredType", 
                        "description": "For filtering on the base of '@referredType' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "relatedParty.name", 
                        "description": "For filtering on the base of 'name' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "relatedParty.role", 
                        "description": "For filtering on the base of 'role' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "taxExemption.certificateNumber", 
                        "description": "For filtering on the base of 'certificateNumber' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "taxExemption.issuingJurisdiction", 
                        "description": "For filtering on the base of 'issuingJurisdiction' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "taxExemption.reason", 
                        "description": "For filtering on the base of 'reason' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "contact.contactName", 
                        "description": "For filtering on the base of 'contactName' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "contact.contactType", 
                        "description": "For filtering on the base of 'contactType' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "contact.partyRoleType", 
                        "description": "For filtering on the base of 'partyRoleType' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "accountBalance.type", 
                        "description": "For filtering on the base of 'type' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "accountRelationship.relationshipType", 
                        "description": "For filtering on the base of 'relationshipType' field (equality)"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Ok", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/BillingAccount"
                            }, 
                            "type": "array"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }, 
            "post": {
                "operationId": "createBillingAccount", 
                "summary": "Creates a 'BillingAccount'", 
                "tags": [
                    "billingAccount"
                ], 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/BillingAccount_Create"
                        }, 
                        "required": true, 
                        "in": "body", 
                        "name": "billingAccount", 
                        "description": "The Billing Account to be created"
                    }
                ], 
                "responses": {
                    "201": {
                        "description": "Created", 
                        "schema": {
                            "$ref": "#/definitions/BillingAccount"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }, 
        "/billingAccount/{id}": {
            "get": {
                "operationId": "retrieveBillingAccount", 
                "summary": "Retrieves a 'BillingAccount' by Id", 
                "tags": [
                    "billingAccount"
                ], 
                "parameters": [
                    {
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path", 
                        "description": "Identifier of the Billing Account"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Ok", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/BillingAccount"
                            }, 
                            "type": "array"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "404": {
                        "description": "Not Found", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }, 
            "patch": {
                "operationId": "patchBillingAccount", 
                "summary": "Updates partially a 'BillingAccount' by Id", 
                "tags": [
                    "billingAccount"
                ], 
                "parameters": [
                    {
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path", 
                        "description": "Identifier of the Billing Account"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/BillingAccount_Update"
                        }, 
                        "required": true, 
                        "in": "body", 
                        "name": "billingAccount", 
                        "description": "The Billing Account to be updated"
                    }
                ], 
                "responses": {
                    "201": {
                        "description": "Updated", 
                        "schema": {
                            "$ref": "#/definitions/BillingAccount"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "404": {
                        "description": "Not Found", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }, 
            "delete": {
                "operationId": "deleteBillingAccount", 
                "summary": "Deletes a 'BillingAccount' by Id", 
                "tags": [
                    "billingAccount"
                ], 
                "parameters": [
                    {
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path", 
                        "description": "Identifier of the Billing Account"
                    }
                ], 
                "responses": {
                    "204": {
                        "description": "Deleted"
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "404": {
                        "description": "Not Found", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }, 
        "/settlementAccount": {
            "get": {
                "operationId": "listSettlementAccount", 
                "summary": "List or find 'SettlementAccount' objects", 
                "tags": [
                    "settlementAccount"
                ], 
                "parameters": [
                    {
                        "type": "string", 
                        "required": false, 
                        "in": "query", 
                        "name": "fields", 
                        "description": "Comma separated properties to display in response"
                    }, 
                    {
                        "type": "integer", 
                        "required": false, 
                        "in": "query", 
                        "name": "offset", 
                        "description": "Requested index for start of resources to be provided in response"
                    }, 
                    {
                        "type": "integer", 
                        "required": false, 
                        "in": "query", 
                        "name": "limit", 
                        "description": "Requested number of resources to be provided in response"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "paymentStatus", 
                        "description": "For filtering on the base of 'paymentStatus' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "creditLimit.unit", 
                        "description": "For filtering on the base of 'unit' field (equality)"
                    }, 
                    {
                        "format": "float", 
                        "in": "query", 
                        "type": "number", 
                        "name": "creditLimit.value", 
                        "description": "For filtering on the base of 'value' field (equality)"
                    }, 
                    {
                        "name": "creditLimit.value.gt", 
                        "description": "For filtering on the base of 'value' field (great than)", 
                        "type": "number", 
                        "format": "float", 
                        "in": "query"
                    }, 
                    {
                        "name": "creditLimit.value.lt", 
                        "description": "For filtering on the base of 'value' field (less than)", 
                        "type": "number", 
                        "format": "float", 
                        "in": "query"
                    }, 
                    {
                        "format": "date-time", 
                        "in": "query", 
                        "type": "string", 
                        "name": "lastModified", 
                        "description": "For filtering on the base of 'lastModified' field (equality)"
                    }, 
                    {
                        "name": "lastModified.gt", 
                        "description": "For filtering on the base of 'lastModified' field (great than)", 
                        "type": "string", 
                        "format": "date-time", 
                        "in": "query"
                    }, 
                    {
                        "name": "lastModified.lt", 
                        "description": "For filtering on the base of 'lastModified' field (less than)", 
                        "type": "string", 
                        "format": "date-time", 
                        "in": "query"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "name", 
                        "description": "For filtering on the base of 'name' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "state", 
                        "description": "For filtering on the base of 'state' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "type", 
                        "description": "For filtering on the base of 'type' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "integer", 
                        "name": "paymentPlan.numberOfPayments", 
                        "description": "For filtering on the base of 'numberOfPayments' field (equality)"
                    }, 
                    {
                        "name": "paymentPlan.numberOfPayments.gt", 
                        "description": "For filtering on the base of 'numberOfPayments' field (great than)", 
                        "type": "integer", 
                        "in": "query"
                    }, 
                    {
                        "name": "paymentPlan.numberOfPayments.lt", 
                        "description": "For filtering on the base of 'numberOfPayments' field (less than)", 
                        "type": "integer", 
                        "in": "query"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "paymentPlan.paymentFrequency", 
                        "description": "For filtering on the base of 'paymentFrequency' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "integer", 
                        "name": "paymentPlan.priority", 
                        "description": "For filtering on the base of 'priority' field (equality)"
                    }, 
                    {
                        "name": "paymentPlan.priority.gt", 
                        "description": "For filtering on the base of 'priority' field (great than)", 
                        "type": "integer", 
                        "in": "query"
                    }, 
                    {
                        "name": "paymentPlan.priority.lt", 
                        "description": "For filtering on the base of 'priority' field (less than)", 
                        "type": "integer", 
                        "in": "query"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "paymentPlan.status", 
                        "description": "For filtering on the base of 'status' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "paymentPlan.type", 
                        "description": "For filtering on the base of 'type' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "financialAccount.name", 
                        "description": "For filtering on the base of 'name' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "defaultPaymentMethod.name", 
                        "description": "For filtering on the base of 'name' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "relatedParty.@referredType", 
                        "description": "For filtering on the base of '@referredType' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "relatedParty.name", 
                        "description": "For filtering on the base of 'name' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "relatedParty.role", 
                        "description": "For filtering on the base of 'role' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "taxExemption.certificateNumber", 
                        "description": "For filtering on the base of 'certificateNumber' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "taxExemption.issuingJurisdiction", 
                        "description": "For filtering on the base of 'issuingJurisdiction' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "taxExemption.reason", 
                        "description": "For filtering on the base of 'reason' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "contact.contactName", 
                        "description": "For filtering on the base of 'contactName' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "contact.contactType", 
                        "description": "For filtering on the base of 'contactType' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "contact.partyRoleType", 
                        "description": "For filtering on the base of 'partyRoleType' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "accountBalance.type", 
                        "description": "For filtering on the base of 'type' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "accountRelationship.relationshipType", 
                        "description": "For filtering on the base of 'relationshipType' field (equality)"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Ok", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/SettlementAccount"
                            }, 
                            "type": "array"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }, 
            "post": {
                "operationId": "createSettlementAccount", 
                "summary": "Creates a 'SettlementAccount'", 
                "tags": [
                    "settlementAccount"
                ], 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/SettlementAccount_Create"
                        }, 
                        "required": true, 
                        "in": "body", 
                        "name": "settlementAccount", 
                        "description": "The Settlement Account to be created"
                    }
                ], 
                "responses": {
                    "201": {
                        "description": "Created", 
                        "schema": {
                            "$ref": "#/definitions/SettlementAccount"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }, 
        "/settlementAccount/{id}": {
            "get": {
                "operationId": "retrieveSettlementAccount", 
                "summary": "Retrieves a 'SettlementAccount' by Id", 
                "tags": [
                    "settlementAccount"
                ], 
                "parameters": [
                    {
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path", 
                        "description": "Identifier of the Settlement Account"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Ok", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/SettlementAccount"
                            }, 
                            "type": "array"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "404": {
                        "description": "Not Found", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }, 
            "patch": {
                "operationId": "patchSettlementAccount", 
                "summary": "Updates partially a 'SettlementAccount' by Id", 
                "tags": [
                    "settlementAccount"
                ], 
                "parameters": [
                    {
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path", 
                        "description": "Identifier of the Settlement Account"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/SettlementAccount_Update"
                        }, 
                        "required": true, 
                        "in": "body", 
                        "name": "settlementAccount", 
                        "description": "The Settlement Account to be updated"
                    }
                ], 
                "responses": {
                    "201": {
                        "description": "Updated", 
                        "schema": {
                            "$ref": "#/definitions/SettlementAccount"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "404": {
                        "description": "Not Found", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }, 
            "delete": {
                "operationId": "deleteSettlementAccount", 
                "summary": "Deletes a 'SettlementAccount' by Id", 
                "tags": [
                    "settlementAccount"
                ], 
                "parameters": [
                    {
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path", 
                        "description": "Identifier of the Settlement Account"
                    }
                ], 
                "responses": {
                    "204": {
                        "description": "Deleted"
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "404": {
                        "description": "Not Found", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }, 
        "/financialAccount": {
            "get": {
                "operationId": "listFinancialAccount", 
                "summary": "List or find 'FinancialAccount' objects", 
                "tags": [
                    "financialAccount"
                ], 
                "parameters": [
                    {
                        "type": "string", 
                        "required": false, 
                        "in": "query", 
                        "name": "fields", 
                        "description": "Comma separated properties to display in response"
                    }, 
                    {
                        "type": "integer", 
                        "required": false, 
                        "in": "query", 
                        "name": "offset", 
                        "description": "Requested index for start of resources to be provided in response"
                    }, 
                    {
                        "type": "integer", 
                        "required": false, 
                        "in": "query", 
                        "name": "limit", 
                        "description": "Requested number of resources to be provided in response"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "creditLimit.unit", 
                        "description": "For filtering on the base of 'unit' field (equality)"
                    }, 
                    {
                        "format": "float", 
                        "in": "query", 
                        "type": "number", 
                        "name": "creditLimit.value", 
                        "description": "For filtering on the base of 'value' field (equality)"
                    }, 
                    {
                        "name": "creditLimit.value.gt", 
                        "description": "For filtering on the base of 'value' field (great than)", 
                        "type": "number", 
                        "format": "float", 
                        "in": "query"
                    }, 
                    {
                        "name": "creditLimit.value.lt", 
                        "description": "For filtering on the base of 'value' field (less than)", 
                        "type": "number", 
                        "format": "float", 
                        "in": "query"
                    }, 
                    {
                        "format": "date-time", 
                        "in": "query", 
                        "type": "string", 
                        "name": "lastModified", 
                        "description": "For filtering on the base of 'lastModified' field (equality)"
                    }, 
                    {
                        "name": "lastModified.gt", 
                        "description": "For filtering on the base of 'lastModified' field (great than)", 
                        "type": "string", 
                        "format": "date-time", 
                        "in": "query"
                    }, 
                    {
                        "name": "lastModified.lt", 
                        "description": "For filtering on the base of 'lastModified' field (less than)", 
                        "type": "string", 
                        "format": "date-time", 
                        "in": "query"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "name", 
                        "description": "For filtering on the base of 'name' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "state", 
                        "description": "For filtering on the base of 'state' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "type", 
                        "description": "For filtering on the base of 'type' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "relatedParty.@referredType", 
                        "description": "For filtering on the base of '@referredType' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "relatedParty.name", 
                        "description": "For filtering on the base of 'name' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "relatedParty.role", 
                        "description": "For filtering on the base of 'role' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "taxExemption.certificateNumber", 
                        "description": "For filtering on the base of 'certificateNumber' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "taxExemption.issuingJurisdiction", 
                        "description": "For filtering on the base of 'issuingJurisdiction' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "taxExemption.reason", 
                        "description": "For filtering on the base of 'reason' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "contact.contactName", 
                        "description": "For filtering on the base of 'contactName' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "contact.contactType", 
                        "description": "For filtering on the base of 'contactType' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "contact.partyRoleType", 
                        "description": "For filtering on the base of 'partyRoleType' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "accountBalance.type", 
                        "description": "For filtering on the base of 'type' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "accountRelationship.relationshipType", 
                        "description": "For filtering on the base of 'relationshipType' field (equality)"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Ok", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/FinancialAccount"
                            }, 
                            "type": "array"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }, 
            "post": {
                "operationId": "createFinancialAccount", 
                "summary": "Creates a 'FinancialAccount'", 
                "tags": [
                    "financialAccount"
                ], 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/FinancialAccount_Create"
                        }, 
                        "required": true, 
                        "in": "body", 
                        "name": "financialAccount", 
                        "description": "The Financial Account to be created"
                    }
                ], 
                "responses": {
                    "201": {
                        "description": "Created", 
                        "schema": {
                            "$ref": "#/definitions/FinancialAccount"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }, 
        "/financialAccount/{id}": {
            "get": {
                "operationId": "retrieveFinancialAccount", 
                "summary": "Retrieves a 'FinancialAccount' by Id", 
                "tags": [
                    "financialAccount"
                ], 
                "parameters": [
                    {
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path", 
                        "description": "Identifier of the Financial Account"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Ok", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/FinancialAccount"
                            }, 
                            "type": "array"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "404": {
                        "description": "Not Found", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }, 
            "patch": {
                "operationId": "patchFinancialAccount", 
                "summary": "Updates partially a 'FinancialAccount' by Id", 
                "tags": [
                    "financialAccount"
                ], 
                "parameters": [
                    {
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path", 
                        "description": "Identifier of the Financial Account"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/FinancialAccount_Update"
                        }, 
                        "required": true, 
                        "in": "body", 
                        "name": "financialAccount", 
                        "description": "The Financial Account to be updated"
                    }
                ], 
                "responses": {
                    "201": {
                        "description": "Updated", 
                        "schema": {
                            "$ref": "#/definitions/FinancialAccount"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "404": {
                        "description": "Not Found", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }, 
            "delete": {
                "operationId": "deleteFinancialAccount", 
                "summary": "Deletes a 'FinancialAccount' by Id", 
                "tags": [
                    "financialAccount"
                ], 
                "parameters": [
                    {
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path", 
                        "description": "Identifier of the Financial Account"
                    }
                ], 
                "responses": {
                    "204": {
                        "description": "Deleted"
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "404": {
                        "description": "Not Found", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }, 
        "/billingCycleSpecification": {
            "get": {
                "operationId": "listBillingCycleSpecification", 
                "summary": "List or find 'BillingCycleSpecification' objects", 
                "tags": [
                    "billingCycleSpecification"
                ], 
                "parameters": [
                    {
                        "type": "string", 
                        "required": false, 
                        "in": "query", 
                        "name": "fields", 
                        "description": "Comma separated properties to display in response"
                    }, 
                    {
                        "type": "integer", 
                        "required": false, 
                        "in": "query", 
                        "name": "offset", 
                        "description": "Requested index for start of resources to be provided in response"
                    }, 
                    {
                        "type": "integer", 
                        "required": false, 
                        "in": "query", 
                        "name": "limit", 
                        "description": "Requested number of resources to be provided in response"
                    }, 
                    {
                        "in": "query", 
                        "type": "integer", 
                        "name": "billingDateShift", 
                        "description": "For filtering on the base of 'billingDateShift' field (equality)"
                    }, 
                    {
                        "name": "billingDateShift.gt", 
                        "description": "For filtering on the base of 'billingDateShift' field (great than)", 
                        "type": "integer", 
                        "in": "query"
                    }, 
                    {
                        "name": "billingDateShift.lt", 
                        "description": "For filtering on the base of 'billingDateShift' field (less than)", 
                        "type": "integer", 
                        "in": "query"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "billingPeriod", 
                        "description": "For filtering on the base of 'billingPeriod' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "frequency", 
                        "description": "For filtering on the base of 'frequency' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "integer", 
                        "name": "mailingDateOffset", 
                        "description": "For filtering on the base of 'mailingDateOffset' field (equality)"
                    }, 
                    {
                        "name": "mailingDateOffset.gt", 
                        "description": "For filtering on the base of 'mailingDateOffset' field (great than)", 
                        "type": "integer", 
                        "in": "query"
                    }, 
                    {
                        "name": "mailingDateOffset.lt", 
                        "description": "For filtering on the base of 'mailingDateOffset' field (less than)", 
                        "type": "integer", 
                        "in": "query"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "name", 
                        "description": "For filtering on the base of 'name' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "integer", 
                        "name": "paymentDueDateOffset", 
                        "description": "For filtering on the base of 'paymentDueDateOffset' field (equality)"
                    }, 
                    {
                        "name": "paymentDueDateOffset.gt", 
                        "description": "For filtering on the base of 'paymentDueDateOffset' field (great than)", 
                        "type": "integer", 
                        "in": "query"
                    }, 
                    {
                        "name": "paymentDueDateOffset.lt", 
                        "description": "For filtering on the base of 'paymentDueDateOffset' field (less than)", 
                        "type": "integer", 
                        "in": "query"
                    }, 
                    {
                        "format": "date-time", 
                        "in": "query", 
                        "type": "string", 
                        "name": "validFor.endDateTime", 
                        "description": "For filtering on the base of 'endDateTime' field (equality)"
                    }, 
                    {
                        "name": "validFor.endDateTime.gt", 
                        "description": "For filtering on the base of 'endDateTime' field (great than)", 
                        "type": "string", 
                        "format": "date-time", 
                        "in": "query"
                    }, 
                    {
                        "name": "validFor.endDateTime.lt", 
                        "description": "For filtering on the base of 'endDateTime' field (less than)", 
                        "type": "string", 
                        "format": "date-time", 
                        "in": "query"
                    }, 
                    {
                        "format": "date-time", 
                        "in": "query", 
                        "type": "string", 
                        "name": "validFor.startDateTime", 
                        "description": "For filtering on the base of 'startDateTime' field (equality)"
                    }, 
                    {
                        "name": "validFor.startDateTime.gt", 
                        "description": "For filtering on the base of 'startDateTime' field (great than)", 
                        "type": "string", 
                        "format": "date-time", 
                        "in": "query"
                    }, 
                    {
                        "name": "validFor.startDateTime.lt", 
                        "description": "For filtering on the base of 'startDateTime' field (less than)", 
                        "type": "string", 
                        "format": "date-time", 
                        "in": "query"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Ok", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/BillingCycleSpecification"
                            }, 
                            "type": "array"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }, 
            "post": {
                "operationId": "createBillingCycleSpecification", 
                "summary": "Creates a 'BillingCycleSpecification'", 
                "tags": [
                    "billingCycleSpecification"
                ], 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/BillingCycleSpecification_Create"
                        }, 
                        "required": true, 
                        "in": "body", 
                        "name": "billingCycleSpecification", 
                        "description": "The Billing Cycle Specification to be created"
                    }
                ], 
                "responses": {
                    "201": {
                        "description": "Created", 
                        "schema": {
                            "$ref": "#/definitions/BillingCycleSpecification"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }, 
        "/billingCycleSpecification/{id}": {
            "get": {
                "operationId": "retrieveBillingCycleSpecification", 
                "summary": "Retrieves a 'BillingCycleSpecification' by Id", 
                "tags": [
                    "billingCycleSpecification"
                ], 
                "parameters": [
                    {
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path", 
                        "description": "Identifier of the Billing Cycle Specification"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Ok", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/BillingCycleSpecification"
                            }, 
                            "type": "array"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "404": {
                        "description": "Not Found", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }, 
            "patch": {
                "operationId": "patchBillingCycleSpecification", 
                "summary": "Updates partially a 'BillingCycleSpecification' by Id", 
                "tags": [
                    "billingCycleSpecification"
                ], 
                "parameters": [
                    {
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path", 
                        "description": "Identifier of the Billing Cycle Specification"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/BillingCycleSpecification_Update"
                        }, 
                        "required": true, 
                        "in": "body", 
                        "name": "billingCycleSpecification", 
                        "description": "The Billing Cycle Specification to be updated"
                    }
                ], 
                "responses": {
                    "201": {
                        "description": "Updated", 
                        "schema": {
                            "$ref": "#/definitions/BillingCycleSpecification"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "404": {
                        "description": "Not Found", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }, 
            "delete": {
                "operationId": "deleteBillingCycleSpecification", 
                "summary": "Deletes a 'BillingCycleSpecification' by Id", 
                "tags": [
                    "billingCycleSpecification"
                ], 
                "parameters": [
                    {
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path", 
                        "description": "Identifier of the Billing Cycle Specification"
                    }
                ], 
                "responses": {
                    "204": {
                        "description": "Deleted"
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "404": {
                        "description": "Not Found", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }, 
        "/billFormat": {
            "get": {
                "operationId": "listBillFormat", 
                "summary": "List or find 'BillFormat' objects", 
                "tags": [
                    "billFormat"
                ], 
                "parameters": [
                    {
                        "type": "string", 
                        "required": false, 
                        "in": "query", 
                        "name": "fields", 
                        "description": "Comma separated properties to display in response"
                    }, 
                    {
                        "type": "integer", 
                        "required": false, 
                        "in": "query", 
                        "name": "offset", 
                        "description": "Requested index for start of resources to be provided in response"
                    }, 
                    {
                        "type": "integer", 
                        "required": false, 
                        "in": "query", 
                        "name": "limit", 
                        "description": "Requested number of resources to be provided in response"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "name", 
                        "description": "For filtering on the base of 'name' field (equality)"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Ok", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/BillFormat"
                            }, 
                            "type": "array"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }, 
            "post": {
                "operationId": "createBillFormat", 
                "summary": "Creates a 'BillFormat'", 
                "tags": [
                    "billFormat"
                ], 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/BillFormat_Create"
                        }, 
                        "required": true, 
                        "in": "body", 
                        "name": "billFormat", 
                        "description": "The Bill Format to be created"
                    }
                ], 
                "responses": {
                    "201": {
                        "description": "Created", 
                        "schema": {
                            "$ref": "#/definitions/BillFormat"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }, 
        "/billFormat/{id}": {
            "get": {
                "operationId": "retrieveBillFormat", 
                "summary": "Retrieves a 'BillFormat' by Id", 
                "tags": [
                    "billFormat"
                ], 
                "parameters": [
                    {
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path", 
                        "description": "Identifier of the Bill Format"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Ok", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/BillFormat"
                            }, 
                            "type": "array"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "404": {
                        "description": "Not Found", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }, 
            "patch": {
                "operationId": "patchBillFormat", 
                "summary": "Updates partially a 'BillFormat' by Id", 
                "tags": [
                    "billFormat"
                ], 
                "parameters": [
                    {
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path", 
                        "description": "Identifier of the Bill Format"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/BillFormat_Update"
                        }, 
                        "required": true, 
                        "in": "body", 
                        "name": "billFormat", 
                        "description": "The Bill Format to be updated"
                    }
                ], 
                "responses": {
                    "201": {
                        "description": "Updated", 
                        "schema": {
                            "$ref": "#/definitions/BillFormat"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "404": {
                        "description": "Not Found", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }, 
            "delete": {
                "operationId": "deleteBillFormat", 
                "summary": "Deletes a 'BillFormat' by Id", 
                "tags": [
                    "billFormat"
                ], 
                "parameters": [
                    {
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path", 
                        "description": "Identifier of the Bill Format"
                    }
                ], 
                "responses": {
                    "204": {
                        "description": "Deleted"
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "404": {
                        "description": "Not Found", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }, 
        "/billPresentationMedia": {
            "get": {
                "operationId": "listBillPresentationMedia", 
                "summary": "List or find 'BillPresentationMedia' objects", 
                "tags": [
                    "billPresentationMedia"
                ], 
                "parameters": [
                    {
                        "type": "string", 
                        "required": false, 
                        "in": "query", 
                        "name": "fields", 
                        "description": "Comma separated properties to display in response"
                    }, 
                    {
                        "type": "integer", 
                        "required": false, 
                        "in": "query", 
                        "name": "offset", 
                        "description": "Requested index for start of resources to be provided in response"
                    }, 
                    {
                        "type": "integer", 
                        "required": false, 
                        "in": "query", 
                        "name": "limit", 
                        "description": "Requested number of resources to be provided in response"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "name", 
                        "description": "For filtering on the base of 'name' field (equality)"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Ok", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/BillPresentationMedia"
                            }, 
                            "type": "array"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }, 
            "post": {
                "operationId": "createBillPresentationMedia", 
                "summary": "Creates a 'BillPresentationMedia'", 
                "tags": [
                    "billPresentationMedia"
                ], 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/BillPresentationMedia_Create"
                        }, 
                        "required": true, 
                        "in": "body", 
                        "name": "billPresentationMedia", 
                        "description": "The Bill Presentation Media to be created"
                    }
                ], 
                "responses": {
                    "201": {
                        "description": "Created", 
                        "schema": {
                            "$ref": "#/definitions/BillPresentationMedia"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }, 
        "/billPresentationMedia/{id}": {
            "get": {
                "operationId": "retrieveBillPresentationMedia", 
                "summary": "Retrieves a 'BillPresentationMedia' by Id", 
                "tags": [
                    "billPresentationMedia"
                ], 
                "parameters": [
                    {
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path", 
                        "description": "Identifier of the Bill Presentation Media"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Ok", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/BillPresentationMedia"
                            }, 
                            "type": "array"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "404": {
                        "description": "Not Found", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }, 
            "patch": {
                "operationId": "patchBillPresentationMedia", 
                "summary": "Updates partially a 'BillPresentationMedia' by Id", 
                "tags": [
                    "billPresentationMedia"
                ], 
                "parameters": [
                    {
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path", 
                        "description": "Identifier of the Bill Presentation Media"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/BillPresentationMedia_Update"
                        }, 
                        "required": true, 
                        "in": "body", 
                        "name": "billPresentationMedia", 
                        "description": "The Bill Presentation Media to be updated"
                    }
                ], 
                "responses": {
                    "201": {
                        "description": "Updated", 
                        "schema": {
                            "$ref": "#/definitions/BillPresentationMedia"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "404": {
                        "description": "Not Found", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }, 
            "delete": {
                "operationId": "deleteBillPresentationMedia", 
                "summary": "Deletes a 'BillPresentationMedia' by Id", 
                "tags": [
                    "billPresentationMedia"
                ], 
                "parameters": [
                    {
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path", 
                        "description": "Identifier of the Bill Presentation Media"
                    }
                ], 
                "responses": {
                    "204": {
                        "description": "Deleted"
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "404": {
                        "description": "Not Found", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }, 
        "/hub": {
            "post": {
                "operationId": "registerListener", 
                "summary": "Register a listener", 
                "description": "Sets the communication endpoint address the service instance must use to deliver information about its health state, execution state, failures and metrics.", 
                "tags": [
                    "events subscription"
                ], 
                "parameters": [
                    {
                        "name": "data", 
                        "schema": {
                            "$ref": "#/definitions/EventSubscriptionInput"
                        }, 
                        "required": true, 
                        "in": "body", 
                        "description": "Data containing the callback endpoint to deliver the information"
                    }
                ], 
                "responses": {
                    "201": {
                        "description": "Subscribed", 
                        "schema": {
                            "$ref": "#/definitions/EventSubscription"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }, 
        "/hub/{id}": {
            "delete": {
                "operationId": "unregisterListener", 
                "summary": "Unregister a listener", 
                "description": "Resets the communication endpoint address the service instance must use to deliver information about its health state, execution state, failures and metrics.", 
                "tags": [
                    "events subscription"
                ], 
                "parameters": [
                    {
                        "name": "id", 
                        "type": "string", 
                        "required": true, 
                        "in": "path", 
                        "description": "The id of the registered listener"
                    }
                ], 
                "responses": {
                    "201": {
                        "description": "Unsubscribed"
                    }, 
                    "404": {
                        "description": "Not Found", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }
    }, 
    "definitions": {
        "FinancialAccount": {
            "type": "object", 
            "description": "An account of money owed by a party to another entity in exchange for goods or services that have been delivered or used. A financial (account receivable account/account payable) aggregates the amounts of one or more party accounts (billing or settlement) owned by a given party.", 
            "properties": {
                "creditLimit": {
                    "$ref": "#/definitions/Money", 
                    "description": "The maximum amount of money that may be charged on an account"
                }, 
                "description": {
                    "type": "string", 
                    "description": "Detailed description of the party account"
                }, 
                "href": {
                    "type": "string", 
                    "description": "Unique reference of the account"
                }, 
                "id": {
                    "type": "string", 
                    "description": "Unique identifier of the account"
                }, 
                "lastModified": {
                    "type": "string", 
                    "format": "date-time", 
                    "description": "Date of last modification of the account"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the account"
                }, 
                "state": {
                    "type": "string", 
                    "description": "Contains the lifecycle state such as: Active, Closed, Suspended and so on."
                }, 
                "type": {
                    "type": "string", 
                    "description": "A categorization of an account, such as individual, joint, and so forth, whose instances share some of the same characteristics. Note: for flexibility we use a String here but an implementation may use an enumeration with a limited list of valid values."
                }, 
                "relatedParty": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/RelatedPartyRef"
                    }
                }, 
                "taxExemption": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/AccountTaxExemption"
                    }
                }, 
                "contact": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/Contact"
                    }
                }, 
                "accountBalance": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/AccountBalance"
                    }
                }, 
                "accountRelationship": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/AccountRelationship"
                    }
                }, 
                "@type": {
                    "type": "string", 
                    "description": "The class type of the actual resource (for type extension)."
                }, 
                "@schemaLocation": {
                    "type": "string", 
                    "description": "A link to the schema describing a resource (for type extension)."
                }, 
                "@baseType": {
                    "type": "string", 
                    "description": "The base type for use in polymorphic collections"
                }
            }
        }, 
        "FinancialAccount_Create": {
            "type": "object", 
            "description": "An account of money owed by a party to another entity in exchange for goods or services that have been delivered or used. A financial (account receivable account/account payable) aggregates the amounts of one or more party accounts (billing or settlement) owned by a given party.\nSkipped properties: id,href", 
            "required": [
                "name"
            ], 
            "properties": {
                "creditLimit": {
                    "$ref": "#/definitions/Money", 
                    "description": "The maximum amount of money that may be charged on an account"
                }, 
                "description": {
                    "type": "string", 
                    "description": "Detailed description of the party account"
                }, 
                "lastModified": {
                    "type": "string", 
                    "format": "date-time", 
                    "description": "Date of last modification of the account"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the account"
                }, 
                "state": {
                    "type": "string", 
                    "description": "Contains the lifecycle state such as: Active, Closed, Suspended and so on."
                }, 
                "type": {
                    "type": "string", 
                    "description": "A categorization of an account, such as individual, joint, and so forth, whose instances share some of the same characteristics. Note: for flexibility we use a String here but an implementation may use an enumeration with a limited list of valid values."
                }, 
                "relatedParty": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/RelatedPartyRef"
                    }
                }, 
                "taxExemption": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/AccountTaxExemption"
                    }
                }, 
                "contact": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/Contact"
                    }
                }, 
                "accountBalance": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/AccountBalance"
                    }
                }, 
                "accountRelationship": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/AccountRelationship"
                    }
                }, 
                "@type": {
                    "type": "string", 
                    "description": "The class type of the actual resource (for type extension)."
                }, 
                "@schemaLocation": {
                    "type": "string", 
                    "description": "A link to the schema describing a resource (for type extension)."
                }, 
                "@baseType": {
                    "type": "string", 
                    "description": "The base type for use in polymorphic collections"
                }
            }
        }, 
        "FinancialAccount_Update": {
            "type": "object", 
            "description": "An account of money owed by a party to another entity in exchange for goods or services that have been delivered or used. A financial (account receivable account/account payable) aggregates the amounts of one or more party accounts (billing or settlement) owned by a given party.\nSkipped properties: id,href,id,href,lastModified", 
            "properties": {
                "creditLimit": {
                    "$ref": "#/definitions/Money", 
                    "description": "The maximum amount of money that may be charged on an account"
                }, 
                "description": {
                    "type": "string", 
                    "description": "Detailed description of the party account"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the account"
                }, 
                "state": {
                    "type": "string", 
                    "description": "Contains the lifecycle state such as: Active, Closed, Suspended and so on."
                }, 
                "type": {
                    "type": "string", 
                    "description": "A categorization of an account, such as individual, joint, and so forth, whose instances share some of the same characteristics. Note: for flexibility we use a String here but an implementation may use an enumeration with a limited list of valid values."
                }, 
                "relatedParty": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/RelatedPartyRef"
                    }
                }, 
                "taxExemption": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/AccountTaxExemption"
                    }
                }, 
                "contact": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/Contact"
                    }
                }, 
                "accountBalance": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/AccountBalance"
                    }
                }, 
                "accountRelationship": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/AccountRelationship"
                    }
                }, 
                "@type": {
                    "type": "string", 
                    "description": "The class type of the actual resource (for type extension)."
                }, 
                "@schemaLocation": {
                    "type": "string", 
                    "description": "A link to the schema describing a resource (for type extension)."
                }, 
                "@baseType": {
                    "type": "string", 
                    "description": "The base type for use in polymorphic collections"
                }
            }
        }, 
        "PaymentMethod": {
            "type": "object", 
            "description": "Defines a specific method of payment (e.g. direct debit with all details associated)", 
            "properties": {
                "@type": {
                    "type": "string", 
                    "description": "The class type of the actual resource (for type extension)."
                }, 
                "description": {
                    "type": "string", 
                    "description": "Text describing the contents of the payment method"
                }, 
                "href": {
                    "type": "string", 
                    "description": "A resource URI pointing to the resource in the server that stores the detailed information. This is typically the resource url to retrieve individual details for the specific payment method"
                }, 
                "id": {
                    "type": "string", 
                    "description": "Unique Identifier within the server for the payment method."
                }, 
                "name": {
                    "type": "string", 
                    "description": "Friendly name assigned to the payment method"
                }, 
                "preferred": {
                    "type": "boolean", 
                    "description": "If the method is the preferred one by the owner. Typically used when querying for the payment methods of a specific customer or account"
                }, 
                "status": {
                    "type": "string"
                }, 
                "statusDate": {
                    "type": "string", 
                    "format": "date-time"
                }, 
                "validFor": {
                    "$ref": "#/definitions/TimePeriod", 
                    "description": "Date interval in which the payment method is valid"
                }, 
                "relatedParty": {
                    "$ref": "#/definitions/RelatedPartyRef"
                }, 
                "account": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/AccountRef"
                    }
                }, 
                "@schemaLocation": {
                    "type": "string", 
                    "description": "A link to the schema describing a resource (for type extension)."
                }, 
                "@baseType": {
                    "type": "string", 
                    "description": "The base type for use in polymorphic collections"
                }
            }
        }, 
        "BillingCycleSpecification": {
            "type": "object", 
            "description": "A detailed description of when to initiate a billing cycle and the various sub steps of a billing cycle.", 
            "properties": {
                "billingDateShift": {
                    "type": "integer", 
                    "description": "An offset of a billing/settlement date. The offset is expressed as number of days with regard to the start of the billing/settlement period."
                }, 
                "billingPeriod": {
                    "type": "string", 
                    "description": "A billing time period. It can be recurring, for example: week, month, quarter of year, year ."
                }, 
                "chargeDateOffset": {
                    "$ref": "#/definitions/int", 
                    "description": "An offset of a date through which charges previously received by the billing system will appear on the bill. The offset is expressed as number of days with regard to the start of the BillingPeriod."
                }, 
                "creditDateOffset": {
                    "$ref": "#/definitions/int", 
                    "description": "An offset of a date through which credits previously received by the billing system will appear on the bill. The offset is expressed as number of days with regard to the start of the BillingPeriod."
                }, 
                "description": {
                    "type": "string", 
                    "description": "An explanation regarding this billing cycle specification"
                }, 
                "frequency": {
                    "type": "string", 
                    "description": "Frequency of the billing cycle (monthly for instance)"
                }, 
                "href": {
                    "type": "string", 
                    "description": "Reference of the billing cycle specification"
                }, 
                "id": {
                    "type": "string", 
                    "description": "Unique identifier of the billing cycle specification"
                }, 
                "mailingDateOffset": {
                    "type": "integer", 
                    "description": "An offset of a customer bill mailing date. The offset is expressed as number of days with regard to the start of the BillingPeriod."
                }, 
                "name": {
                    "type": "string", 
                    "description": "A short descriptive name"
                }, 
                "paymentDueDateOffset": {
                    "type": "integer", 
                    "description": "An offset of a payment due date. The offset is expressed as number of days with regard to the start of the BillingPeriod."
                }, 
                "validFor": {
                    "$ref": "#/definitions/TimePeriod", 
                    "description": "The period for which the billing specification cycle is valid"
                }, 
                "@type": {
                    "type": "string", 
                    "description": "The class type of the actual resource (for type extension)."
                }, 
                "@schemaLocation": {
                    "type": "string", 
                    "description": "A link to the schema describing a resource (for type extension)."
                }, 
                "@baseType": {
                    "type": "string", 
                    "description": "The base type for use in polymorphic collections"
                }
            }
        }, 
        "BillingCycleSpecification_Create": {
            "type": "object", 
            "description": "A detailed description of when to initiate a billing cycle and the various sub steps of a billing cycle.\nSkipped properties: id,href", 
            "required": [
                "name"
            ], 
            "properties": {
                "billingDateShift": {
                    "type": "integer", 
                    "description": "An offset of a billing/settlement date. The offset is expressed as number of days with regard to the start of the billing/settlement period."
                }, 
                "billingPeriod": {
                    "type": "string", 
                    "description": "A billing time period. It can be recurring, for example: week, month, quarter of year, year ."
                }, 
                "chargeDateOffset": {
                    "$ref": "#/definitions/int", 
                    "description": "An offset of a date through which charges previously received by the billing system will appear on the bill. The offset is expressed as number of days with regard to the start of the BillingPeriod."
                }, 
                "creditDateOffset": {
                    "$ref": "#/definitions/int", 
                    "description": "An offset of a date through which credits previously received by the billing system will appear on the bill. The offset is expressed as number of days with regard to the start of the BillingPeriod."
                }, 
                "description": {
                    "type": "string", 
                    "description": "An explanation regarding this billing cycle specification"
                }, 
                "frequency": {
                    "type": "string", 
                    "description": "Frequency of the billing cycle (monthly for instance)"
                }, 
                "mailingDateOffset": {
                    "type": "integer", 
                    "description": "An offset of a customer bill mailing date. The offset is expressed as number of days with regard to the start of the BillingPeriod."
                }, 
                "name": {
                    "type": "string", 
                    "description": "A short descriptive name"
                }, 
                "paymentDueDateOffset": {
                    "type": "integer", 
                    "description": "An offset of a payment due date. The offset is expressed as number of days with regard to the start of the BillingPeriod."
                }, 
                "validFor": {
                    "$ref": "#/definitions/TimePeriod", 
                    "description": "The period for which the billing specification cycle is valid"
                }, 
                "@type": {
                    "type": "string", 
                    "description": "The class type of the actual resource (for type extension)."
                }, 
                "@schemaLocation": {
                    "type": "string", 
                    "description": "A link to the schema describing a resource (for type extension)."
                }, 
                "@baseType": {
                    "type": "string", 
                    "description": "The base type for use in polymorphic collections"
                }
            }
        }, 
        "BillingCycleSpecification_Update": {
            "type": "object", 
            "description": "A detailed description of when to initiate a billing cycle and the various sub steps of a billing cycle.\nSkipped properties: id,href,id,href", 
            "properties": {
                "billingDateShift": {
                    "type": "integer", 
                    "description": "An offset of a billing/settlement date. The offset is expressed as number of days with regard to the start of the billing/settlement period."
                }, 
                "billingPeriod": {
                    "type": "string", 
                    "description": "A billing time period. It can be recurring, for example: week, month, quarter of year, year ."
                }, 
                "chargeDateOffset": {
                    "$ref": "#/definitions/int", 
                    "description": "An offset of a date through which charges previously received by the billing system will appear on the bill. The offset is expressed as number of days with regard to the start of the BillingPeriod."
                }, 
                "creditDateOffset": {
                    "$ref": "#/definitions/int", 
                    "description": "An offset of a date through which credits previously received by the billing system will appear on the bill. The offset is expressed as number of days with regard to the start of the BillingPeriod."
                }, 
                "description": {
                    "type": "string", 
                    "description": "An explanation regarding this billing cycle specification"
                }, 
                "frequency": {
                    "type": "string", 
                    "description": "Frequency of the billing cycle (monthly for instance)"
                }, 
                "mailingDateOffset": {
                    "type": "integer", 
                    "description": "An offset of a customer bill mailing date. The offset is expressed as number of days with regard to the start of the BillingPeriod."
                }, 
                "name": {
                    "type": "string", 
                    "description": "A short descriptive name"
                }, 
                "paymentDueDateOffset": {
                    "type": "integer", 
                    "description": "An offset of a payment due date. The offset is expressed as number of days with regard to the start of the BillingPeriod."
                }, 
                "validFor": {
                    "$ref": "#/definitions/TimePeriod", 
                    "description": "The period for which the billing specification cycle is valid"
                }, 
                "@type": {
                    "type": "string", 
                    "description": "The class type of the actual resource (for type extension)."
                }, 
                "@schemaLocation": {
                    "type": "string", 
                    "description": "A link to the schema describing a resource (for type extension)."
                }, 
                "@baseType": {
                    "type": "string", 
                    "description": "The base type for use in polymorphic collections"
                }
            }
        }, 
        "BillFormat": {
            "type": "object", 
            "description": "A detailed description of the way in which a bill is presented.", 
            "properties": {
                "description": {
                    "type": "string", 
                    "description": "An explanatory text for this bill format"
                }, 
                "href": {
                    "type": "string", 
                    "description": "Reference of the bill format"
                }, 
                "id": {
                    "type": "string", 
                    "description": "Unique identifier of the bill format"
                }, 
                "name": {
                    "type": "string", 
                    "description": "A short descriptive name"
                }, 
                "@type": {
                    "type": "string", 
                    "description": "The class type of the actual resource (for type extension)."
                }, 
                "@schemaLocation": {
                    "type": "string", 
                    "description": "A link to the schema describing a resource (for type extension)."
                }, 
                "@baseType": {
                    "type": "string", 
                    "description": "The base type for use in polymorphic collections"
                }
            }
        }, 
        "BillFormat_Create": {
            "type": "object", 
            "description": "A detailed description of the way in which a bill is presented.\nSkipped properties: id,href", 
            "required": [
                "name"
            ], 
            "properties": {
                "description": {
                    "type": "string", 
                    "description": "An explanatory text for this bill format"
                }, 
                "name": {
                    "type": "string", 
                    "description": "A short descriptive name"
                }, 
                "@type": {
                    "type": "string", 
                    "description": "The class type of the actual resource (for type extension)."
                }, 
                "@schemaLocation": {
                    "type": "string", 
                    "description": "A link to the schema describing a resource (for type extension)."
                }, 
                "@baseType": {
                    "type": "string", 
                    "description": "The base type for use in polymorphic collections"
                }
            }
        }, 
        "BillFormat_Update": {
            "type": "object", 
            "description": "A detailed description of the way in which a bill is presented.\nSkipped properties: id,href,id,href", 
            "properties": {
                "description": {
                    "type": "string", 
                    "description": "An explanatory text for this bill format"
                }, 
                "name": {
                    "type": "string", 
                    "description": "A short descriptive name"
                }, 
                "@type": {
                    "type": "string", 
                    "description": "The class type of the actual resource (for type extension)."
                }, 
                "@schemaLocation": {
                    "type": "string", 
                    "description": "A link to the schema describing a resource (for type extension)."
                }, 
                "@baseType": {
                    "type": "string", 
                    "description": "The base type for use in polymorphic collections"
                }
            }
        }, 
        "BillPresentationMedia": {
            "type": "object", 
            "description": "A mean of communicating a bill, supported by the associated bill format. For example, post mail, email, web page.", 
            "properties": {
                "description": {
                    "type": "string", 
                    "description": "An explanatory text describing this bill presentation media"
                }, 
                "href": {
                    "type": "string", 
                    "description": "Reference of the bill presentation media"
                }, 
                "id": {
                    "type": "string", 
                    "description": "Unique identifier of the bill presentation media"
                }, 
                "name": {
                    "type": "string", 
                    "description": "A short descriptive name"
                }, 
                "@type": {
                    "type": "string", 
                    "description": "The class type of the actual resource (for type extension)."
                }, 
                "@schemaLocation": {
                    "type": "string", 
                    "description": "A link to the schema describing a resource (for type extension)."
                }, 
                "@baseType": {
                    "type": "string", 
                    "description": "The base type for use in polymorphic collections"
                }
            }
        }, 
        "BillPresentationMedia_Create": {
            "type": "object", 
            "description": "A mean of communicating a bill, supported by the associated bill format. For example, post mail, email, web page.\nSkipped properties: id,href", 
            "required": [
                "name"
            ], 
            "properties": {
                "description": {
                    "type": "string", 
                    "description": "An explanatory text describing this bill presentation media"
                }, 
                "name": {
                    "type": "string", 
                    "description": "A short descriptive name"
                }, 
                "@type": {
                    "type": "string", 
                    "description": "The class type of the actual resource (for type extension)."
                }, 
                "@schemaLocation": {
                    "type": "string", 
                    "description": "A link to the schema describing a resource (for type extension)."
                }, 
                "@baseType": {
                    "type": "string", 
                    "description": "The base type for use in polymorphic collections"
                }
            }
        }, 
        "BillPresentationMedia_Update": {
            "type": "object", 
            "description": "A mean of communicating a bill, supported by the associated bill format. For example, post mail, email, web page.\nSkipped properties: id,href,id,href", 
            "properties": {
                "description": {
                    "type": "string", 
                    "description": "An explanatory text describing this bill presentation media"
                }, 
                "name": {
                    "type": "string", 
                    "description": "A short descriptive name"
                }, 
                "@type": {
                    "type": "string", 
                    "description": "The class type of the actual resource (for type extension)."
                }, 
                "@schemaLocation": {
                    "type": "string", 
                    "description": "A link to the schema describing a resource (for type extension)."
                }, 
                "@baseType": {
                    "type": "string", 
                    "description": "The base type for use in polymorphic collections"
                }
            }
        }, 
        "PartyAccount": {
            "type": "object", 
            "description": "Account used for billing or for settlement purposes concerning a given party (an organization or an individual).", 
            "properties": {
                "creditLimit": {
                    "$ref": "#/definitions/Money", 
                    "description": "The maximum amount of money that may be charged on an account"
                }, 
                "description": {
                    "type": "string", 
                    "description": "Detailed description of the party account"
                }, 
                "href": {
                    "type": "string", 
                    "description": "Unique reference of the account"
                }, 
                "id": {
                    "type": "string", 
                    "description": "Unique identifier of the account"
                }, 
                "lastModified": {
                    "type": "string", 
                    "format": "date-time", 
                    "description": "Date of last modification of the account"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the account"
                }, 
                "state": {
                    "type": "string", 
                    "description": "Contains the lifecycle state such as: Active, Closed, Suspended and so on."
                }, 
                "type": {
                    "type": "string", 
                    "description": "A categorization of an account, such as individual, joint, and so forth, whose instances share some of the same characteristics. Note: for flexibility we use a String here but an implementation may use an enumeration with a limited list of valid values."
                }, 
                "paymentStatus": {
                    "type": "string", 
                    "description": "The condition of the account, such as due, paid, in arrears."
                }, 
                "billStructure": {
                    "$ref": "#/definitions/BillStructure"
                }, 
                "paymentPlan": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/PaymentPlan"
                    }
                }, 
                "financialAccount": {
                    "$ref": "#/definitions/FinancialAccountRef"
                }, 
                "defaultPaymentMethod": {
                    "$ref": "#/definitions/PaymentMethodRef"
                }, 
                "relatedParty": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/RelatedPartyRef"
                    }
                }, 
                "taxExemption": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/AccountTaxExemption"
                    }
                }, 
                "contact": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/Contact"
                    }
                }, 
                "accountBalance": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/AccountBalance"
                    }
                }, 
                "accountRelationship": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/AccountRelationship"
                    }
                }, 
                "@type": {
                    "type": "string", 
                    "description": "The class type of the actual resource (for type extension)."
                }, 
                "@schemaLocation": {
                    "type": "string", 
                    "description": "A link to the schema describing a resource (for type extension)."
                }, 
                "@baseType": {
                    "type": "string", 
                    "description": "The base type for use in polymorphic collections"
                }
            }
        }, 
        "PartyAccount_Create": {
            "type": "object", 
            "description": "Account used for billing or for settlement purposes concerning a given party (an organization or an individual).\nSkipped properties: id,href", 
            "required": [
                "name"
            ], 
            "properties": {
                "creditLimit": {
                    "$ref": "#/definitions/Money", 
                    "description": "The maximum amount of money that may be charged on an account"
                }, 
                "description": {
                    "type": "string", 
                    "description": "Detailed description of the party account"
                }, 
                "lastModified": {
                    "type": "string", 
                    "format": "date-time", 
                    "description": "Date of last modification of the account"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the account"
                }, 
                "state": {
                    "type": "string", 
                    "description": "Contains the lifecycle state such as: Active, Closed, Suspended and so on."
                }, 
                "type": {
                    "type": "string", 
                    "description": "A categorization of an account, such as individual, joint, and so forth, whose instances share some of the same characteristics. Note: for flexibility we use a String here but an implementation may use an enumeration with a limited list of valid values."
                }, 
                "paymentStatus": {
                    "type": "string", 
                    "description": "The condition of the account, such as due, paid, in arrears."
                }, 
                "billStructure": {
                    "$ref": "#/definitions/BillStructure"
                }, 
                "paymentPlan": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/PaymentPlan"
                    }
                }, 
                "financialAccount": {
                    "$ref": "#/definitions/FinancialAccountRef"
                }, 
                "defaultPaymentMethod": {
                    "$ref": "#/definitions/PaymentMethodRef"
                }, 
                "relatedParty": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/RelatedPartyRef"
                    }
                }, 
                "taxExemption": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/AccountTaxExemption"
                    }
                }, 
                "contact": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/Contact"
                    }
                }, 
                "accountBalance": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/AccountBalance"
                    }
                }, 
                "accountRelationship": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/AccountRelationship"
                    }
                }, 
                "@type": {
                    "type": "string", 
                    "description": "The class type of the actual resource (for type extension)."
                }, 
                "@schemaLocation": {
                    "type": "string", 
                    "description": "A link to the schema describing a resource (for type extension)."
                }, 
                "@baseType": {
                    "type": "string", 
                    "description": "The base type for use in polymorphic collections"
                }
            }
        }, 
        "PartyAccount_Update": {
            "type": "object", 
            "description": "Account used for billing or for settlement purposes concerning a given party (an organization or an individual).\nSkipped properties: id,href,id,href,accountBalance", 
            "properties": {
                "creditLimit": {
                    "$ref": "#/definitions/Money", 
                    "description": "The maximum amount of money that may be charged on an account"
                }, 
                "description": {
                    "type": "string", 
                    "description": "Detailed description of the party account"
                }, 
                "lastModified": {
                    "type": "string", 
                    "format": "date-time", 
                    "description": "Date of last modification of the account"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the account"
                }, 
                "state": {
                    "type": "string", 
                    "description": "Contains the lifecycle state such as: Active, Closed, Suspended and so on."
                }, 
                "type": {
                    "type": "string", 
                    "description": "A categorization of an account, such as individual, joint, and so forth, whose instances share some of the same characteristics. Note: for flexibility we use a String here but an implementation may use an enumeration with a limited list of valid values."
                }, 
                "paymentStatus": {
                    "type": "string", 
                    "description": "The condition of the account, such as due, paid, in arrears."
                }, 
                "billStructure": {
                    "$ref": "#/definitions/BillStructure"
                }, 
                "paymentPlan": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/PaymentPlan"
                    }
                }, 
                "financialAccount": {
                    "$ref": "#/definitions/FinancialAccountRef"
                }, 
                "defaultPaymentMethod": {
                    "$ref": "#/definitions/PaymentMethodRef"
                }, 
                "relatedParty": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/RelatedPartyRef"
                    }
                }, 
                "taxExemption": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/AccountTaxExemption"
                    }
                }, 
                "contact": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/Contact"
                    }
                }, 
                "accountRelationship": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/AccountRelationship"
                    }
                }, 
                "@type": {
                    "type": "string", 
                    "description": "The class type of the actual resource (for type extension)."
                }, 
                "@schemaLocation": {
                    "type": "string", 
                    "description": "A link to the schema describing a resource (for type extension)."
                }, 
                "@baseType": {
                    "type": "string", 
                    "description": "The base type for use in polymorphic collections"
                }
            }
        }, 
        "BillingAccount": {
            "type": "object", 
            "description": "A party account used for billing purposes. It includes a description of the bill structure (frequency, presentation media, format and so on).", 
            "properties": {
                "paymentStatus": {
                    "type": "string", 
                    "description": "The condition of the account, such as due, paid, in arrears."
                }, 
                "creditLimit": {
                    "$ref": "#/definitions/Money", 
                    "description": "The maximum amount of money that may be charged on an account"
                }, 
                "description": {
                    "type": "string", 
                    "description": "Detailed description of the party account"
                }, 
                "href": {
                    "type": "string", 
                    "description": "Unique reference of the account"
                }, 
                "id": {
                    "type": "string", 
                    "description": "Unique identifier of the account"
                }, 
                "lastModified": {
                    "type": "string", 
                    "format": "date-time", 
                    "description": "Date of last modification of the account"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the account"
                }, 
                "state": {
                    "type": "string", 
                    "description": "Contains the lifecycle state such as: Active, Closed, Suspended and so on."
                }, 
                "type": {
                    "type": "string", 
                    "description": "A categorization of an account, such as individual, joint, and so forth, whose instances share some of the same characteristics. Note: for flexibility we use a String here but an implementation may use an enumeration with a limited list of valid values."
                }, 
                "billStructure": {
                    "$ref": "#/definitions/BillStructure"
                }, 
                "paymentPlan": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/PaymentPlan"
                    }
                }, 
                "financialAccount": {
                    "$ref": "#/definitions/FinancialAccountRef"
                }, 
                "defaultPaymentMethod": {
                    "$ref": "#/definitions/PaymentMethodRef"
                }, 
                "relatedParty": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/RelatedPartyRef"
                    }
                }, 
                "taxExemption": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/AccountTaxExemption"
                    }
                }, 
                "contact": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/Contact"
                    }
                }, 
                "accountBalance": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/AccountBalance"
                    }
                }, 
                "accountRelationship": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/AccountRelationship"
                    }
                }, 
                "@type": {
                    "type": "string", 
                    "description": "The class type of the actual resource (for type extension)."
                }, 
                "@schemaLocation": {
                    "type": "string", 
                    "description": "A link to the schema describing a resource (for type extension)."
                }, 
                "@baseType": {
                    "type": "string", 
                    "description": "The base type for use in polymorphic collections"
                }
            }
        }, 
        "BillingAccount_Create": {
            "type": "object", 
            "description": "A party account used for billing purposes. It includes a description of the bill structure (frequency, presentation media, format and so on).\nSkipped properties: id,href", 
            "required": [
                "name"
            ], 
            "properties": {
                "paymentStatus": {
                    "type": "string", 
                    "description": "The condition of the account, such as due, paid, in arrears."
                }, 
                "creditLimit": {
                    "$ref": "#/definitions/Money", 
                    "description": "The maximum amount of money that may be charged on an account"
                }, 
                "description": {
                    "type": "string", 
                    "description": "Detailed description of the party account"
                }, 
                "lastModified": {
                    "type": "string", 
                    "format": "date-time", 
                    "description": "Date of last modification of the account"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the account"
                }, 
                "state": {
                    "type": "string", 
                    "description": "Contains the lifecycle state such as: Active, Closed, Suspended and so on."
                }, 
                "type": {
                    "type": "string", 
                    "description": "A categorization of an account, such as individual, joint, and so forth, whose instances share some of the same characteristics. Note: for flexibility we use a String here but an implementation may use an enumeration with a limited list of valid values."
                }, 
                "billStructure": {
                    "$ref": "#/definitions/BillStructure"
                }, 
                "paymentPlan": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/PaymentPlan"
                    }
                }, 
                "financialAccount": {
                    "$ref": "#/definitions/FinancialAccountRef"
                }, 
                "defaultPaymentMethod": {
                    "$ref": "#/definitions/PaymentMethodRef"
                }, 
                "relatedParty": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/RelatedPartyRef"
                    }
                }, 
                "taxExemption": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/AccountTaxExemption"
                    }
                }, 
                "contact": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/Contact"
                    }
                }, 
                "accountBalance": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/AccountBalance"
                    }
                }, 
                "accountRelationship": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/AccountRelationship"
                    }
                }, 
                "@type": {
                    "type": "string", 
                    "description": "The class type of the actual resource (for type extension)."
                }, 
                "@schemaLocation": {
                    "type": "string", 
                    "description": "A link to the schema describing a resource (for type extension)."
                }, 
                "@baseType": {
                    "type": "string", 
                    "description": "The base type for use in polymorphic collections"
                }
            }
        }, 
        "BillingAccount_Update": {
            "type": "object", 
            "description": "A party account used for billing purposes. It includes a description of the bill structure (frequency, presentation media, format and so on).\nSkipped properties: id,href,id,href,accountBalance", 
            "properties": {
                "paymentStatus": {
                    "type": "string", 
                    "description": "The condition of the account, such as due, paid, in arrears."
                }, 
                "creditLimit": {
                    "$ref": "#/definitions/Money", 
                    "description": "The maximum amount of money that may be charged on an account"
                }, 
                "description": {
                    "type": "string", 
                    "description": "Detailed description of the party account"
                }, 
                "lastModified": {
                    "type": "string", 
                    "format": "date-time", 
                    "description": "Date of last modification of the account"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the account"
                }, 
                "state": {
                    "type": "string", 
                    "description": "Contains the lifecycle state such as: Active, Closed, Suspended and so on."
                }, 
                "type": {
                    "type": "string", 
                    "description": "A categorization of an account, such as individual, joint, and so forth, whose instances share some of the same characteristics. Note: for flexibility we use a String here but an implementation may use an enumeration with a limited list of valid values."
                }, 
                "billStructure": {
                    "$ref": "#/definitions/BillStructure"
                }, 
                "paymentPlan": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/PaymentPlan"
                    }
                }, 
                "financialAccount": {
                    "$ref": "#/definitions/FinancialAccountRef"
                }, 
                "defaultPaymentMethod": {
                    "$ref": "#/definitions/PaymentMethodRef"
                }, 
                "relatedParty": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/RelatedPartyRef"
                    }
                }, 
                "taxExemption": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/AccountTaxExemption"
                    }
                }, 
                "contact": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/Contact"
                    }
                }, 
                "accountRelationship": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/AccountRelationship"
                    }
                }, 
                "@type": {
                    "type": "string", 
                    "description": "The class type of the actual resource (for type extension)."
                }, 
                "@schemaLocation": {
                    "type": "string", 
                    "description": "A link to the schema describing a resource (for type extension)."
                }, 
                "@baseType": {
                    "type": "string", 
                    "description": "The base type for use in polymorphic collections"
                }
            }
        }, 
        "SettlementAccount": {
            "type": "object", 
            "description": "A party account used for settlement purposes. It includes a description of the structure used for the settlement (frequency, presentation media, format and so on).", 
            "properties": {
                "paymentStatus": {
                    "type": "string", 
                    "description": "The condition of the account, such as due, paid, in arrears."
                }, 
                "creditLimit": {
                    "$ref": "#/definitions/Money", 
                    "description": "The maximum amount of money that may be charged on an account"
                }, 
                "description": {
                    "type": "string", 
                    "description": "Detailed description of the party account"
                }, 
                "href": {
                    "type": "string", 
                    "description": "Unique reference of the account"
                }, 
                "id": {
                    "type": "string", 
                    "description": "Unique identifier of the account"
                }, 
                "lastModified": {
                    "type": "string", 
                    "format": "date-time", 
                    "description": "Date of last modification of the account"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the account"
                }, 
                "state": {
                    "type": "string", 
                    "description": "Contains the lifecycle state such as: Active, Closed, Suspended and so on."
                }, 
                "type": {
                    "type": "string", 
                    "description": "A categorization of an account, such as individual, joint, and so forth, whose instances share some of the same characteristics. Note: for flexibility we use a String here but an implementation may use an enumeration with a limited list of valid values."
                }, 
                "billStructure": {
                    "$ref": "#/definitions/BillStructure"
                }, 
                "paymentPlan": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/PaymentPlan"
                    }
                }, 
                "financialAccount": {
                    "$ref": "#/definitions/FinancialAccountRef"
                }, 
                "defaultPaymentMethod": {
                    "$ref": "#/definitions/PaymentMethodRef"
                }, 
                "relatedParty": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/RelatedPartyRef"
                    }
                }, 
                "taxExemption": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/AccountTaxExemption"
                    }
                }, 
                "contact": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/Contact"
                    }
                }, 
                "accountBalance": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/AccountBalance"
                    }
                }, 
                "accountRelationship": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/AccountRelationship"
                    }
                }, 
                "@type": {
                    "type": "string", 
                    "description": "The class type of the actual resource (for type extension)."
                }, 
                "@schemaLocation": {
                    "type": "string", 
                    "description": "A link to the schema describing a resource (for type extension)."
                }, 
                "@baseType": {
                    "type": "string", 
                    "description": "The base type for use in polymorphic collections"
                }
            }
        }, 
        "SettlementAccount_Create": {
            "type": "object", 
            "description": "A party account used for settlement purposes. It includes a description of the structure used for the settlement (frequency, presentation media, format and so on).\nSkipped properties: id,href", 
            "required": [
                "name"
            ], 
            "properties": {
                "paymentStatus": {
                    "type": "string", 
                    "description": "The condition of the account, such as due, paid, in arrears."
                }, 
                "creditLimit": {
                    "$ref": "#/definitions/Money", 
                    "description": "The maximum amount of money that may be charged on an account"
                }, 
                "description": {
                    "type": "string", 
                    "description": "Detailed description of the party account"
                }, 
                "lastModified": {
                    "type": "string", 
                    "format": "date-time", 
                    "description": "Date of last modification of the account"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the account"
                }, 
                "state": {
                    "type": "string", 
                    "description": "Contains the lifecycle state such as: Active, Closed, Suspended and so on."
                }, 
                "type": {
                    "type": "string", 
                    "description": "A categorization of an account, such as individual, joint, and so forth, whose instances share some of the same characteristics. Note: for flexibility we use a String here but an implementation may use an enumeration with a limited list of valid values."
                }, 
                "billStructure": {
                    "$ref": "#/definitions/BillStructure"
                }, 
                "paymentPlan": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/PaymentPlan"
                    }
                }, 
                "financialAccount": {
                    "$ref": "#/definitions/FinancialAccountRef"
                }, 
                "defaultPaymentMethod": {
                    "$ref": "#/definitions/PaymentMethodRef"
                }, 
                "relatedParty": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/RelatedPartyRef"
                    }
                }, 
                "taxExemption": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/AccountTaxExemption"
                    }
                }, 
                "contact": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/Contact"
                    }
                }, 
                "accountBalance": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/AccountBalance"
                    }
                }, 
                "accountRelationship": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/AccountRelationship"
                    }
                }, 
                "@type": {
                    "type": "string", 
                    "description": "The class type of the actual resource (for type extension)."
                }, 
                "@schemaLocation": {
                    "type": "string", 
                    "description": "A link to the schema describing a resource (for type extension)."
                }, 
                "@baseType": {
                    "type": "string", 
                    "description": "The base type for use in polymorphic collections"
                }
            }
        }, 
        "SettlementAccount_Update": {
            "type": "object", 
            "description": "A party account used for settlement purposes. It includes a description of the structure used for the settlement (frequency, presentation media, format and so on).\nSkipped properties: id,href,id,href,accountBalance", 
            "properties": {
                "paymentStatus": {
                    "type": "string", 
                    "description": "The condition of the account, such as due, paid, in arrears."
                }, 
                "creditLimit": {
                    "$ref": "#/definitions/Money", 
                    "description": "The maximum amount of money that may be charged on an account"
                }, 
                "description": {
                    "type": "string", 
                    "description": "Detailed description of the party account"
                }, 
                "lastModified": {
                    "type": "string", 
                    "format": "date-time", 
                    "description": "Date of last modification of the account"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the account"
                }, 
                "state": {
                    "type": "string", 
                    "description": "Contains the lifecycle state such as: Active, Closed, Suspended and so on."
                }, 
                "type": {
                    "type": "string", 
                    "description": "A categorization of an account, such as individual, joint, and so forth, whose instances share some of the same characteristics. Note: for flexibility we use a String here but an implementation may use an enumeration with a limited list of valid values."
                }, 
                "billStructure": {
                    "$ref": "#/definitions/BillStructure"
                }, 
                "paymentPlan": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/PaymentPlan"
                    }
                }, 
                "financialAccount": {
                    "$ref": "#/definitions/FinancialAccountRef"
                }, 
                "defaultPaymentMethod": {
                    "$ref": "#/definitions/PaymentMethodRef"
                }, 
                "relatedParty": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/RelatedPartyRef"
                    }
                }, 
                "taxExemption": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/AccountTaxExemption"
                    }
                }, 
                "contact": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/Contact"
                    }
                }, 
                "accountRelationship": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/AccountRelationship"
                    }
                }, 
                "@type": {
                    "type": "string", 
                    "description": "The class type of the actual resource (for type extension)."
                }, 
                "@schemaLocation": {
                    "type": "string", 
                    "description": "A link to the schema describing a resource (for type extension)."
                }, 
                "@baseType": {
                    "type": "string", 
                    "description": "The base type for use in polymorphic collections"
                }
            }
        }, 
        "Money": {
            "type": "object", 
            "description": "A base / value business entity used to represent money", 
            "properties": {
                "unit": {
                    "type": "string", 
                    "description": "Currency (ISO4217 norm uses 3 letters to define the currency)"
                }, 
                "value": {
                    "type": "number", 
                    "format": "float", 
                    "description": "A positive floating point number"
                }
            }
        }, 
        "RelatedPartyRef": {
            "type": "object", 
            "description": "relatedParty (RelatedPartyRef). The party which the recommendation is related with.", 
            "properties": {
                "href": {
                    "type": "string", 
                    "description": "Hypertext Reference of the related party."
                }, 
                "id": {
                    "type": "string", 
                    "description": "Unique identifier of related party"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the related party."
                }, 
                "role": {
                    "type": "string", 
                    "description": "Role of the related party."
                }, 
                "@referredType": {
                    "type": "string", 
                    "description": "The actual type of the target instance when needed for disambiguation."
                }
            }
        }, 
        "AccountTaxExemption": {
            "type": "object", 
            "description": "Proof of freedom from taxes imposed by a taxing jurisdiction", 
            "properties": {
                "certificateNumber": {
                    "type": "string", 
                    "description": "Identifier of a document that shows proof of exemption from taxes for the taxing jurisdiction"
                }, 
                "issuingJurisdiction": {
                    "type": "string", 
                    "description": "Name of the taxing jurisdiction for which taxes are exempt"
                }, 
                "reason": {
                    "type": "string", 
                    "description": "Reason of the tax exemption"
                }, 
                "validFor": {
                    "$ref": "#/definitions/TimePeriod", 
                    "description": "Period for which the exemption is valid"
                }, 
                "@type": {
                    "type": "string", 
                    "description": "The class type of the actual resource (for type extension)."
                }, 
                "@schemaLocation": {
                    "type": "string", 
                    "description": "A link to the schema describing a resource (for type extension)."
                }, 
                "@baseType": {
                    "type": "string", 
                    "description": "The base type for use in polymorphic collections"
                }
            }
        }, 
        "Contact": {
            "type": "object", 
            "description": "An individual or an organization used as a contact point for a given account and accessed via some contact medium.", 
            "properties": {
                "contactName": {
                    "type": "string", 
                    "description": "A displayable name for that contact"
                }, 
                "contactType": {
                    "type": "string", 
                    "description": "Type of contact (primary, secondary...)"
                }, 
                "partyRoleType": {
                    "type": "string", 
                    "description": "Identifies what kind of party role type is linked to the contact (a account manager...)"
                }, 
                "validFor": {
                    "$ref": "#/definitions/TimePeriod", 
                    "description": "Validity period of that contact"
                }, 
                "contactMedium": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/ContactMedium"
                    }
                }, 
                "relatedParty": {
                    "$ref": "#/definitions/RelatedPartyRef"
                }, 
                "@type": {
                    "type": "string", 
                    "description": "The class type of the actual resource (for type extension)."
                }, 
                "@schemaLocation": {
                    "type": "string", 
                    "description": "A link to the schema describing a resource (for type extension)."
                }, 
                "@baseType": {
                    "type": "string", 
                    "description": "The base type for use in polymorphic collections"
                }
            }
        }, 
        "AccountBalance": {
            "type": "object", 
            "description": "Balances linked to the account", 
            "properties": {
                "amount": {
                    "$ref": "#/definitions/Money", 
                    "description": "Balance amount"
                }, 
                "type": {
                    "type": "string", 
                    "description": "Type of the balance : deposit balance, disputed balance, loyalty balance, receivable balance..."
                }, 
                "validFor": {
                    "$ref": "#/definitions/TimePeriod", 
                    "description": "Balance validity period"
                }, 
                "@type": {
                    "type": "string", 
                    "description": "The class type of the actual resource (for type extension)."
                }, 
                "@schemaLocation": {
                    "type": "string", 
                    "description": "A link to the schema describing a resource (for type extension)."
                }, 
                "@baseType": {
                    "type": "string", 
                    "description": "The base type for use in polymorphic collections"
                }
            }
        }, 
        "AccountRelationship": {
            "type": "object", 
            "description": "Significant connection between accounts. For instance an aggregating account for a list of shop branches each having its own billing account.", 
            "properties": {
                "relationshipType": {
                    "type": "string", 
                    "description": "Type of relationship"
                }, 
                "validFor": {
                    "$ref": "#/definitions/TimePeriod", 
                    "description": "Validity period of that relationship"
                }, 
                "account": {
                    "$ref": "#/definitions/AccountRef"
                }, 
                "@type": {
                    "type": "string", 
                    "description": "The class type of the actual resource (for type extension)."
                }, 
                "@schemaLocation": {
                    "type": "string", 
                    "description": "A link to the schema describing a resource (for type extension)."
                }, 
                "@baseType": {
                    "type": "string", 
                    "description": "The base type for use in polymorphic collections"
                }
            }
        }, 
        "TimePeriod": {
            "type": "object", 
            "description": "A base / value business entity used to represent a period of time between two timepoints.", 
            "properties": {
                "endDateTime": {
                    "type": "string", 
                    "format": "date-time", 
                    "description": "An instant of time, ending at the TimePeriod."
                }, 
                "startDateTime": {
                    "type": "string", 
                    "format": "date-time", 
                    "description": "An instant of time, starting at the TimePeriod"
                }
            }
        }, 
        "ContactMedium": {
            "type": "object", 
            "description": "Indicates the contact medium that could be used to contact the party.", 
            "properties": {
                "preferred": {
                    "type": "boolean", 
                    "description": "If true, indicates that is the preferred contact medium"
                }, 
                "type": {
                    "type": "string", 
                    "description": "Type of the contact medium, such as: email address, telephone number, postal address"
                }, 
                "validFor": {
                    "$ref": "#/definitions/TimePeriod", 
                    "description": "The time period that the contact medium is valid for"
                }, 
                "characteristic": {
                    "$ref": "#/definitions/MediumCharacteristic"
                }, 
                "@type": {
                    "type": "string", 
                    "description": "The class type of the actual resource (for type extension)."
                }, 
                "@schemaLocation": {
                    "type": "string", 
                    "description": "A link to the schema describing a resource (for type extension)."
                }, 
                "@baseType": {
                    "type": "string", 
                    "description": "The base type for use in polymorphic collections"
                }
            }
        }, 
        "MediumCharacteristic": {
            "type": "object", 
            "description": "Describes the contact medium characteristics that could be used to contact a party (an individual or an organization)", 
            "properties": {
                "@schemaLocation": {
                    "type": "string", 
                    "description": "A link to the schema describing a resource (for type extension)."
                }, 
                "@type": {
                    "type": "string", 
                    "description": "The class type of the actual resource (for type extension)."
                }, 
                "city": {
                    "type": "string", 
                    "description": "The city"
                }, 
                "country": {
                    "type": "string", 
                    "description": "The country"
                }, 
                "emailAddress": {
                    "type": "string", 
                    "description": "Full email address in standard format"
                }, 
                "faxNumber": {
                    "type": "string", 
                    "description": "The fax number of the contact"
                }, 
                "phoneNumber": {
                    "type": "string", 
                    "description": "The primary phone number of the contact"
                }, 
                "postCode": {
                    "type": "string", 
                    "description": "Postcode"
                }, 
                "stateOrProvince": {
                    "type": "string", 
                    "description": "State or province"
                }, 
                "street1": {
                    "type": "string", 
                    "description": "Describes the street"
                }, 
                "street2": {
                    "type": "string", 
                    "description": "Complementary street description"
                }, 
                "type": {
                    "type": "string", 
                    "description": "Type of medium (fax, mobile phone...)"
                }, 
                "@baseType": {
                    "type": "string", 
                    "description": "The base type for use in polymorphic collections"
                }
            }
        }, 
        "AccountRef": {
            "type": "object", 
            "description": "Account reference. A account may be a party account or a financial account.", 
            "properties": {
                "description": {
                    "type": "string", 
                    "description": "Detailed description of the account"
                }, 
                "href": {
                    "type": "string", 
                    "description": "Reference of the account"
                }, 
                "id": {
                    "type": "string", 
                    "description": "Unique identifier of the account"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the account"
                }, 
                "@referredType": {
                    "type": "string", 
                    "description": "The actual type of the target instance when needed for disambiguation."
                }
            }
        }, 
        "BillStructure": {
            "type": "object", 
            "description": "The structure of the bill for party accounts (billling or settlement).", 
            "properties": {
                "presentationMedia": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/BillPresentationMediaRef"
                    }
                }, 
                "format": {
                    "$ref": "#/definitions/BillFormatRef"
                }, 
                "cycleSpecification": {
                    "$ref": "#/definitions/BillingCycleSpecificationRef"
                }, 
                "@type": {
                    "type": "string", 
                    "description": "The class type of the actual resource (for type extension)."
                }, 
                "@schemaLocation": {
                    "type": "string", 
                    "description": "A link to the schema describing a resource (for type extension)."
                }, 
                "@baseType": {
                    "type": "string", 
                    "description": "The base type for use in polymorphic collections"
                }
            }
        }, 
        "PaymentPlan": {
            "type": "object", 
            "description": "Defines a plan for payment (when a party wants to spread his payments)", 
            "properties": {
                "numberOfPayments": {
                    "type": "integer", 
                    "description": "Number of payments used to spread the global payment"
                }, 
                "paymentFrequency": {
                    "type": "string", 
                    "description": "Frequency of the payments, such as monthly and bimonthly"
                }, 
                "priority": {
                    "type": "integer", 
                    "description": "Priority of the payment plan"
                }, 
                "status": {
                    "type": "string", 
                    "description": "Status of the payment plan (effective, ineffective)"
                }, 
                "totalAmount": {
                    "$ref": "#/definitions/Money", 
                    "description": "Amount paid"
                }, 
                "type": {
                    "type": "string", 
                    "description": "Type of payment plan"
                }, 
                "validFor": {
                    "$ref": "#/definitions/TimePeriod", 
                    "description": "Validity period of the payment plan"
                }, 
                "paymentMethod": {
                    "$ref": "#/definitions/PaymentMethodRef"
                }, 
                "@type": {
                    "type": "string", 
                    "description": "The class type of the actual resource (for type extension)."
                }, 
                "@schemaLocation": {
                    "type": "string", 
                    "description": "A link to the schema describing a resource (for type extension)."
                }, 
                "@baseType": {
                    "type": "string", 
                    "description": "The base type for use in polymorphic collections"
                }
            }
        }, 
        "FinancialAccountRef": {
            "type": "object", 
            "description": "AccountReceivable reference. An account of money owed by a party to another entity in exchange for goods or services that have been delivered or used. An account receivable aggregates the amounts of one or more party accounts (billing or settlement) owned by a given party.", 
            "properties": {
                "href": {
                    "type": "string", 
                    "description": "Unique reference of the account"
                }, 
                "id": {
                    "type": "string", 
                    "description": "Unique identifier of the account"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the account"
                }, 
                "accountBalance": {
                    "$ref": "#/definitions/AccountBalance"
                }, 
                "@referredType": {
                    "type": "string", 
                    "description": "The actual type of the target instance when needed for disambiguation."
                }
            }
        }, 
        "PaymentMethodRef": {
            "type": "object", 
            "description": "PaymentMethod reference. A payment method defines a specific mean of payment (e.g direct debit).", 
            "properties": {
                "href": {
                    "type": "string", 
                    "description": "Reference of the payment mean"
                }, 
                "id": {
                    "type": "string", 
                    "description": "Unique identifier of the payment mean"
                }, 
                "name": {
                    "type": "string", 
                    "description": "Name of the payment mean"
                }, 
                "@referredType": {
                    "type": "string", 
                    "description": "The actual type of the target instance when needed for disambiguation."
                }
            }
        }, 
        "BillPresentationMediaRef": {
            "type": "object", 
            "description": "PresentationMedia reference. A mean of communicating a bill, supported by the associated bill format. For example, post mail, email, web page.", 
            "properties": {
                "href": {
                    "type": "string", 
                    "description": "Reference of the bill presentation media"
                }, 
                "id": {
                    "type": "string", 
                    "description": "Unique identifier of the bill presentation media"
                }, 
                "name": {
                    "type": "string", 
                    "description": "A short descriptive name"
                }, 
                "@referredType": {
                    "type": "string", 
                    "description": "The actual type of the target instance when needed for disambiguation."
                }
            }
        }, 
        "BillFormatRef": {
            "type": "object", 
            "description": "BillFormat reference. A bill format is a description of the way in which a bill is presented.", 
            "properties": {
                "href": {
                    "type": "string", 
                    "description": "Reference of the bill format"
                }, 
                "id": {
                    "type": "string", 
                    "description": "Unique identifier of the bill format"
                }, 
                "name": {
                    "type": "string", 
                    "description": "A short descriptive name"
                }, 
                "@referredType": {
                    "type": "string", 
                    "description": "The actual type of the target instance when needed for disambiguation."
                }
            }
        }, 
        "BillingCycleSpecificationRef": {
            "type": "object", 
            "description": "BillingCycleSpecification reference. A description of when to initiate a billing cycle and the various sub steps of a billing cycle.", 
            "properties": {
                "dateShift": {
                    "type": "integer", 
                    "description": "An offset of a billing/settlement date. The offset is expressed as number of days with regard to the start of the billing/settlement period."
                }, 
                "frequency": {
                    "type": "string", 
                    "description": "Frequency of the billing cycle (monthly for instance)"
                }, 
                "href": {
                    "type": "string", 
                    "description": "Reference of the billing cycle specification"
                }, 
                "id": {
                    "type": "string", 
                    "description": "Unique identifier of the billing cycle specification"
                }, 
                "name": {
                    "type": "string", 
                    "description": "A short descriptive name"
                }, 
                "@referredType": {
                    "type": "string", 
                    "description": "The actual type of the target instance when needed for disambiguation."
                }
            }
        }, 
        "EventSubscription": {
            "required": [
                "id", 
                "callback"
            ], 
            "properties": {
                "id": {
                    "type": "string", 
                    "description": "Id of the listener"
                }, 
                "callback": {
                    "type": "string", 
                    "description": "The callback being registered."
                }, 
                "query": {
                    "type": "string", 
                    "description": "additional data to be passed"
                }
            }
        }, 
        "EventSubscriptionInput": {
            "required": [
                "callback"
            ], 
            "properties": {
                "callback": {
                    "type": "string", 
                    "description": "The callback being registered."
                }, 
                "query": {
                    "type": "string", 
                    "description": "additional data to be passed"
                }
            }
        }, 
        "Error": {
            "required": [
                "code", 
                "reason"
            ], 
            "properties": {
                "code": {
                    "type": "integer", 
                    "description": "Application related code."
                }, 
                "reason": {
                    "type": "integer", 
                    "description": "Text that explains the reason for error."
                }, 
                "message": {
                    "type": "string", 
                    "description": "(optional) Text that provide more details and corrective actions related to the error."
                }, 
                "status": {
                    "type": "integer", 
                    "description": "(optional) http error code extension like 400-2"
                }, 
                "referenceError": {
                    "type": "string", 
                    "description": "(optional) A URL to online documentation that provides more information about the error."
                }, 
                "@type": {
                    "type": "string", 
                    "description": "(optional) The class type of a REST resource."
                }, 
                "@schemaLocation": {
                    "type": "string", 
                    "description": "(optional) A link to the schema describing a REST resource."
                }
            }
        }
    }
}